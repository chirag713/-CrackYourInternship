/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool check(TreeNode *a,TreeNode*b){
        if(a==NULL && b==NULL)
        return 1;
        if(a==NULL || b== NULL )
        return 0;
        
        if(a->val==b->val )
        {
            return (check(a->left,b->right) && check(a->right,b->left));
        }
        return 0;
    }

    bool isSymmetric(TreeNode* root) {
        if(root==NULL)
        return 1;
        if(root->val==root->val)
        {
           return  check(root->left,root->right);
        }
        return 0;
    }
};
