/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:


    bool solve (TreeNode* root, int sum , int current){

        if(root==NULL) return 0;
        current +=root->val;

        if(root->left == NULL && root->right == NULL){
            return current ==sum;
        }else if(root->left==NULL){
            return solve(root->right , sum , current);
        }else if(root->right == NULL){
            return solve(root->left , sum , current);
        }else{
            return solve(root->right , sum , current) || solve(root->left , sum , current) ;
        }
        return 0;
    }
    bool hasPathSum(TreeNode* root, int targetSum) {
        return solve(root , targetSum , 0);
    }
};
